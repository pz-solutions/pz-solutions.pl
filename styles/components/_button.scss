@use "sass:color";
@use "../libs/functions";
@use "../libs/skel";

///
/// Stellar by HTML5 UP
/// html5up.net | @ajlkn
/// Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
///

/* Button */

	input[type="submit"],
	input[type="reset"],
	input[type="button"],
	button,
	.button {
		@include skel.vendor('appearance', 'none');
		@include skel.vendor('transition', (
			'background-color #{functions.duration(transition)} ease-in-out',
			'color #{functions.duration(transition)} ease-in-out'
		));
		border-radius: functions.size(border-radius);
		border: 0;
		cursor: pointer;
		display: inline-block;
		font-weight: functions.font(weight);
		height: 2.75em;
		line-height: 2.75em;
		min-width: 9.25em;
		padding: 0 1.5em;
		text-align: center;
		text-decoration: none;
		white-space: nowrap;

		&.icon {
			padding-left: 1.35em;

			&:before {
				margin-right: 0.5em;
			}
		}

		&.fit {
			display: block;
			margin: 0 0 (functions.size(element-margin) * 0.5) 0;
			width: 100%;
		}

		&.small {
			font-size: 0.8em;
		}

		&.big {
			font-size: 1.35em;
		}

		&.disabled,
		&:disabled {
			@include skel.vendor('pointer-events', 'none');
			opacity: 0.25;
		}

		@include skel.breakpoint(small) {
			min-width: 0;
		}
	}

	@mixin color-button($p: null) {
		input[type="submit"],
		input[type="reset"],
		input[type="button"],
		button,
		.button {
			background-color: transparent;
			box-shadow: inset 0 0 0 1px functions.palette($p, border);
			color: functions.palette($p, fg-bold) !important;

			&:hover {
				background-color: functions.palette($p, border-bg);
			}

			&:active {
				background-color: functions.palette($p, border2-bg);
			}

			&.icon {
				&:before {
					color: functions.palette($p, fg-light);
				}
			}

			&.special {
				background-color: functions.palette(accent);
				color: functions.palette(invert, bg) !important;
				box-shadow: none;

				&:hover {
					background-color: color.adjust(functions.palette(accent), $lightness: 3%);
				}

				&:active {
					background-color: color.adjust(functions.palette(accent), $lightness: -3%);
				}

				&.icon {
					&:before {
						color: functions.palette(invert, bg) !important;
					}
				}
			}
		}
	}

	@include color-button;